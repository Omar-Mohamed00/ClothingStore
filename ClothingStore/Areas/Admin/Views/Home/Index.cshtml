@{
    ViewData["Title"] = "Sales Dashboard";
}

<style>
    body {
        font-family: Arial, sans-serif;
        background-color: #f4f4f4;
        margin: 0;
        padding: 20px;
    }

    h2 {
        color: #333;
        margin-top: 30px;
        margin-bottom: 15px;
    }

    .chart-container {
        background: #fff;
        border-radius: 8px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        padding: 20px;
        margin-bottom: 30px;
    }

    canvas {
        max-width: 100%;
        height: auto !important;
    }
</style>

<div class="container">
    <div class="row">
        <div class="col-md-6">
            <div class="chart-container">
                <canvas id="totalProfitChart"></canvas>
            </div>
        </div>
        <div class="col-md-6">
            <div class="chart-container">
                <canvas id="profitPerMonthlyChart"></canvas>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-6">
            <div class="chart-container">
                <canvas id="totalSalesChart"></canvas>
            </div>
        </div>
        <!-- Chart 4: إجمالي المبيعات لكل عميل شهريًا (Bar Chart) -->
        <div class="col-md-6">
            <div class="chart-container">
                <canvas id="salesPerMonthChart" width="400" height="200"></canvas>
            </div>
        </div>
    </div>
    <div class="row">
        <!-- Chart 5: كمية المنتجات المتبقية (Doughnut Chart) -->
        <div class="col-md-6">
            <div class="chart-container">
                <canvas id="remainingProductsChart" width="400" height="200"></canvas>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/lib/charts/chart.umd.js"></script>
        <script>
        // Chart 2: إجمالي الأرباح لكل عميل شهريًا (Bar Chart)
        var profitPerCustomerMonthlyData = @Html.Raw(Json.Serialize(ViewBag.ProfitPerMonthly));
        var monthlyLabels = profitPerCustomerMonthlyData.map(item => `${item.year}/${item.month}`);
        var monthlyProfits = profitPerCustomerMonthlyData.map(item => item.totalProfit);

        var ctx2 = document.getElementById('profitPerMonthlyChart').getContext('2d');
        new Chart(ctx2, {
            type: 'bar',
            data: {
                labels: monthlyLabels,
                datasets: [{
                    label: 'إجمالي الأرباح',
                    data: monthlyProfits,
                    backgroundColor: 'rgba(255, 99, 132, 0.6)',
                    borderColor: 'rgba(255, 99, 132, 1)',
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    title: {
                        display: true,
                        text: 'إجمالي الأرباح شهريًا',
                        font: {
                            size: 16
                        }
                    },
                    legend: {
                        display: false
                    }
                },
                scales: {
                    y: {
                        beginAtZero: true,
                        grid: {
                            color: 'rgba(0, 0, 0, 0.1)'
                        }
                    },
                    x: {
                        grid: {
                            display: false
                        }
                    }
                }
            }
        });
        </script>
        <script>
             // Chart 4: إجمالي المبيعات لكل عميل شهريًا (Bar Chart)
        var salesPerMonth = @Html.Raw(Json.Serialize(ViewBag.SalesPerMonth));
        var salesMonthlyLabels = salesPerMonth.map(item => `${item.year}/${item.month}`);
        var salesMonthlyTotals = salesPerMonth.map(item => item.totalSales);

        var ctx4 = document.getElementById('salesPerMonthChart').getContext('2d');
        new Chart(ctx4, {
            type: 'bar',
            data: {
                labels: salesMonthlyLabels,
                datasets: [{
                    label: 'إجمالي المبيعات',
                    data: salesMonthlyTotals,
                    backgroundColor: 'rgba(255, 206, 86, 0.6)',
                    borderColor: 'rgba(255, 206, 86, 1)',
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    title: {
                        display: true,
                        text: 'إجمالي المبيعات شهريًا',
                        font: {
                            size: 16
                        }
                    },
                    legend: {
                        display: false
                    }
                },
                scales: {
                    y: {
                        beginAtZero: true,
                        grid: {
                            color: 'rgba(0, 0, 0, 0.1)'
                        }
                    },
                    x: {
                        grid: {
                            display: false
                        }
                    }
                }
            }
        });
        </script>
        <script>
           
             // Chart 5: كمية المنتجات المتبقية (Doughnut Chart)
        var remainingProductsData = @Html.Raw(Json.Serialize(ViewBag.RemainingProducts));
        var productLabels = remainingProductsData.map(item => item.productName);
        var productQuantities = remainingProductsData.map(item => item.remainingQuantity);

        var ctx5 = document.getElementById('remainingProductsChart').getContext('2d');
        new Chart(ctx5, {
            type: 'doughnut',
            data: {
                labels: productLabels,
                datasets: [{
                    data: productQuantities,
                    backgroundColor: [
                        'rgba(255, 99, 132, 0.6)',
                        'rgba(54, 162, 235, 0.6)',
                        'rgba(255, 206, 86, 0.6)',
                        'rgba(75, 192, 192, 0.6)',
                        'rgba(153, 102, 255, 0.6)',
                        'rgba(255, 159, 64, 0.6)'
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    title: {
                        display: true,
                        text: 'كمية المنتجات المتبقية',
                        font: {
                            size: 16
                        }
                    },
                    legend: {
                        position: 'bottom'
                    }
                }
            }
        });
        </script>
        <script>
            var totalProfitData = @Html.Raw(Json.Serialize(ViewBag.TotalProfit)) || 0;
            var totalSalesData = @Html.Raw(Json.Serialize(ViewBag.TotalSales)) || 0;

            function createChart(id, type, labels, datasetLabel, data, bgColor, borderColor) {
                if (!document.getElementById(id)) return;
                new Chart(document.getElementById(id).getContext('2d'), {
                    type: type,
                    data: {
                        labels: labels,
                        datasets: [{
                            label: datasetLabel,
                            data: data,
                            backgroundColor: bgColor,
                            borderColor: borderColor,
                            borderWidth: 1
                        }]
                    },
                    options: {
                        responsive: true,
                        plugins: {
                            title: { display: true, text: datasetLabel, font: { size: 16 } },
                            legend: { display: type !== 'bar' }
                        },
                        scales: { y: { beginAtZero: true } }
                    }
                });
            }

            createChart('totalProfitChart', 'bar', ["الإجمالي"], 'إجمالي الأرباح', [totalProfitData], 'rgba(75, 192, 192, 0.6)', 'rgba(75, 192, 192, 1)');
            createChart('totalSalesChart', 'bar', ["الإجمالي"], 'إجمالي المبيعات', [totalSalesData], 'rgba(255, 99, 132, 0.6)', 'rgba(255, 99, 132, 1)');
        </script>
}
